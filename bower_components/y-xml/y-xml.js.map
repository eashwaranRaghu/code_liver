{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Xml.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","extend","Y","requestModules","then","YXml","_Y$Array$typeDefiniti","os","_model","_content","attributes","tagname","init","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","dom","_domObserver","_eventListenerHandler","utils","EventListenerHandler","_setDom","_get","prototype","event","type","callEventListeners","index","nodes","values","observe","name","value","_inherits","_createClass","key","disconnect","destroy","pos","types","_types","Array","isArray","v","isTypeDefinition","class","push","_this2","token","mutualExclude","records","takeRecords","_domObserverListener","_mutualExclude","mutations","forEach","mutation","attributeName","val","target","getAttribute","get","set","_loop","addedNodes","some","c","window","Text","textContent","remove","nextSibling","findIndex","Element","Xml","insert","content","removedNodes","delete","MutationObserver","childList","_tryInsertDom","succ","insertBefore","setAttribute","removeAttribute","valId","id","newNode","getDom","compareIds","textNode","_this3","__yxml","attr","map","childNodes","_bindToDom","_this4","document","createElement","keysPrimitives","hasOwnProperty","getType","appendChild","addEventListener","removeEventListener","regeneratorRuntime","mark","_changed","_args","arguments","wrap","_context","prev","next","delegateYield","typeDefinition","apply","stop","CustomTypeDefinition","struct","parseArguments","arg","tagName","initType","YXmlInitializer","model","args","properties","typestruct","_context2","Struct","List","op","opContent","Map","t2","requires","info","setOperation","t4","abrupt","createType"],"mappings":"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","file":"y-xml.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y, MutationObserver */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['Array', 'Map']).then(function () {\n    class YXml extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content, attributes, tagname, init) {\n        super(os, _model, _content)\n        this.attributes = attributes\n        this.dom = null\n        this._domObserver = null\n        this._eventListenerHandler = new Y.utils.EventListenerHandler()\n        this.tagname = tagname\n        if (init != null && init.dom != null) {\n          this._setDom(init.dom)\n        }\n        super.observe(event => {\n          if (event.type === 'insert') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childInserted',\n              index: event.index,\n              nodes: event.values\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'childRemoved',\n              index: event.index,\n              _content: event._content,\n              values: event.values\n            })\n          }\n        })\n        attributes.observe(event => {\n          if (event.type === 'update' || event.type === 'add') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeChanged',\n              name: event.name,\n              value: event.value\n            })\n          } else if (event.type === 'delete') {\n            this._eventListenerHandler.callEventListeners({\n              type: 'attributeRemoved',\n              name: event.name\n            })\n          }\n        })\n      }\n      _destroy () {\n        if (this._domObserver != null) {\n          this._domObserver.disconnect()\n        }\n        this._eventListenerHandler.destroy()\n        this._eventListenerHandler = null\n        super._destroy()\n      }\n      insert (pos, types) {\n        var _types = []\n        if (!Array.isArray(types)) {\n          throw new Error('Expected an Array of content!')\n        }\n        for (var i = 0; i < types.length; i++) {\n          var v = types[i]\n          var t = Y.utils.isTypeDefinition(v)\n          if (!(v != null && (\n                       typeof v === 'string' ||\n                       (t && t[0].class === YXml)\n             ))) {\n            throw new Error('Expected Y.Xml type or String!')\n          } else if (typeof v === 'string' && v.length === 0) {\n            continue // if empty string\n          }\n          _types.push(v)\n        }\n        super.insert(pos, types)\n      }\n      // binds to a dom element\n      // Only call if dom and YXml are isomorph\n      _bindToDom (dom) {\n        // this function makes sure that either the\n        // dom event is executed, or the yjs observer is executed\n        var token = true\n        var mutualExclude = f => {\n          // take and process current records\n          var records = this._domObserver.takeRecords()\n          if (records.length > 0) {\n            this._domObserverListener(records)\n          }\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              // discard created records\n              this._domObserver.takeRecords()\n              token = true\n              throw e\n            }\n            this._domObserver.takeRecords()\n            token = true\n          }\n        }\n        this._mutualExclude = mutualExclude\n        this._domObserverListener = mutations => {\n          mutualExclude(() => {\n            mutations.forEach(mutation => {\n              if (mutation.type === 'attributes') {\n                var name = mutation.attributeName\n                var val = mutation.target.getAttribute(mutation.attributeName)\n                if (this.attributes.get(name) !== val) {\n                  this.attributes.set(name, val)\n                }\n              } else if (mutation.type === 'childList') {\n                for (let i = 0; i < mutation.addedNodes.length; i++) {\n                  let n = mutation.addedNodes[i]\n                  if (this._content.some(function (c) { return c.dom === n })) {\n                    // check if it already exists (since this method is called asynchronously)\n                    continue\n                  }\n                  if (n instanceof window.Text && n.textContent === '') {\n                    // check if textnode and empty content (sometime happens.. )\n                    //   TODO - you could also check if the inserted node actually exists in the\n                    //          dom (in order to cover more potential cases)\n                    n.remove()\n                    continue\n                  }\n                  // compute position\n                  // special case, n.nextSibling is not yet inserted. So we find the next inserted element!\n                  var pos = -1\n                  var nextSibling = n.nextSibling\n                  while (pos < 0) {\n                    if (nextSibling == null) {\n                      pos = this._content.length\n                    } else {\n                      pos = this._content.findIndex(function (c) { return c.dom === nextSibling })\n                      nextSibling = nextSibling.nextSibling\n                    }\n                  }\n                  var c\n                  if (n instanceof window.Text) {\n                    c = n.textContent\n                  } else if (n instanceof window.Element) {\n                    c = Y.Xml(n)\n                  } else {\n                    throw new Error('Unsupported XML Element found. Synchronization will no longer work!')\n                  }\n                  this.insert(pos, [c])\n                  var content = this._content[pos]\n                  content.dom = n\n                }\n                Array.prototype.forEach.call(mutation.removedNodes, n => {\n                  var pos = this._content.findIndex(function (c) {\n                    return c.dom === n\n                  })\n                  if (pos >= 0) {\n                    this.delete(pos)\n                  } else {\n                    throw new Error('An unexpected condition occured (deleted node does not exist in the model)!')\n                  }\n                })\n              }\n            })\n          })\n        }\n        this._domObserver = new MutationObserver(this._domObserverListener)\n        this._domObserver.observe(dom, { attributes: true, childList: true })\n        // In order to insert a new node, successor needs to be inserted\n        // when c.dom can be inserted, try to insert the predecessors too\n        var _tryInsertDom = (pos) => {\n          var c = this._content[pos]\n          var succ\n          if (pos + 1 < this._content.length) {\n            succ = this._content[pos + 1]\n            if (succ.dom == null) throw new Error('Unexpected behavior') // shouldn't happen anymore!\n          } else {\n            // pseudo successor\n            succ = {\n              dom: null\n            }\n          }\n          dom.insertBefore(c.dom, succ.dom)\n        }\n        this._tryInsertDom = _tryInsertDom\n        this.observe(event => {\n          mutualExclude(() => {\n            if (event.type === 'attributeChanged') {\n              dom.setAttribute(event.name, event.value)\n            } else if (event.type === 'attributeRemoved') {\n              dom.removeAttribute(event.name)\n            } else if (event.type === 'childInserted') {\n              if (event.nodes.length === 1 && event.nodes[0] instanceof YXml) {\n                // a new xml node was inserted.\n                // TODO: consider the case that nodes contains mixed text & types (currently not implemented in yjs)\n                var valId = this._content[event.index].id\n                if (event.nodes.length > 1) { throw new Error('This case is not handled, you\\'ll run into consistency issues. Contact the developer') }\n                var newNode = event.nodes[0].getDom()\n                // This is called async. So we have to compute the position again\n                // also mutual excluse this\n                var pos\n                if (event.index < this._content.length && Y.utils.compareIds(this._content[event.index].id, valId)) {\n                  pos = event.index\n                } else {\n                  pos = this._content.findIndex(function (c) {\n                    return Y.utils.compareIds(c.id, valId)\n                  })\n                }\n                if (pos >= 0) {\n                  this._content[pos].dom = newNode\n                  _tryInsertDom(pos)\n                }\n              } else {\n                for (var i = event.nodes.length - 1; i >= 0; i--) {\n                  var n = event.nodes[i]\n                  var textNode = new window.Text(n)\n                  this._content[event.index + i].dom = textNode\n                  _tryInsertDom(event.index + i)\n                }\n              }\n            } else if (event.type === 'childRemoved') {\n              event._content.forEach(function (c) {\n                if (c.dom != null) {\n                  c.dom.remove()\n                }\n              })\n            }\n          })\n        })\n        return dom\n      }\n      _setDom (dom) {\n        if (this.dom != null) {\n          throw new Error('Only call this method if you know what you are doing ;)')\n        } else if (dom.__yxml != null) { // TODO do i need to check this? - no.. but for dev purps..\n          throw new Error('Already bound to an YXml type')\n        } else {\n          dom.__yxml = this._model\n          // tag is already set in constructor\n          // set attributes\n          for (var i = 0; i < dom.attributes.length; i++) {\n            var attr = dom.attributes[i]\n            this.attributes.set(attr.name, attr.value)\n          }\n          this.insert(0, Array.prototype.map.call(dom.childNodes, (c, i) => {\n            if (c instanceof window.Element) {\n              return Y.Xml(c)\n            } else if (c instanceof window.Text) {\n              return c.textContent\n            } else {\n              throw new Error('Unknown node type!')\n            }\n          }))\n          Array.prototype.forEach.call(dom.childNodes, (dom, i) => {\n            var c = this._content[i]\n            c.dom = dom\n          })\n          this.dom = this._bindToDom(dom)\n          return this.dom\n        }\n      }\n      getDom () {\n        if (this.dom == null) {\n          var dom = document.createElement(this.tagname)\n          dom.__yxml = this\n          this.attributes.keysPrimitives().forEach(key => {\n            dom.setAttribute(key, this.attributes.get(key))\n          })\n          for (var i = 0; i < this._content.length; i++) {\n            let c = this._content[i]\n            if (c.hasOwnProperty('val')) {\n              c.dom = new window.Text(c.val)\n            } else {\n              c.dom = this.os.getType(c.type).getDom()\n            }\n            dom.appendChild(c.dom)\n          }\n          this.dom = this._bindToDom(dom)\n        }\n        return this.dom\n      }\n      observe (f) {\n        this._eventListenerHandler.addEventListener(f)\n      }\n      unobserve (f) {\n        this._eventListenerHandler.removeEventListener(f)\n      }\n      * _changed () {\n        if (this._domObserver != null) {\n          this._domObserverListener(this._domObserver.takeRecords())\n        }\n        yield* Y.Array.typeDefinition['class'].prototype._changed.apply(this, arguments)\n      }\n    }\n    Y.extend('Xml', new Y.utils.CustomTypeDefinition({\n      name: 'Xml',\n      class: YXml,\n      struct: 'List',\n      parseArguments: function (arg) {\n        if (typeof arg === 'string') {\n          return [this, {\n            tagname: arg\n          }]\n        } else if (arg instanceof window.Element) {\n          return [this, {\n            tagname: arg.tagName,\n            dom: arg\n          }]\n        } else {\n          throw new Error('Y.Xml requires an argument which is a string!')\n        }\n      },\n      initType: function * YXmlInitializer (os, model, args) {\n        var _content = []\n        var _types = []\n        yield* Y.Struct.List.map.call(this, model, function (op) {\n          if (op.hasOwnProperty('opContent')) {\n            _content.push({\n              id: op.id,\n              type: op.opContent\n            })\n            _types.push(op.opContent)\n          } else {\n            op.content.forEach(function (c, i) {\n              _content.push({\n                id: [op.id[0], op.id[1] + i],\n                val: op.content[i]\n              })\n            })\n          }\n        })\n        for (var i = 0; i < _types.length; i++) {\n          yield* os.initType.call(this, _types[i])\n        }\n        // if this type is defined in y.share.*, initType is called instead of createType!\n        // So we have to initialize it properly\n        var properties\n        if (model.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          var id = ['_', typestruct + '_' + 'Map_' + model.id[1]]\n          properties = yield* os.initType.call(this, id)\n\n          model.requires = [properties._model]\n          model.info = {\n            tagname: args.tagname\n          }\n          yield* this.setOperation(model)\n        } else {\n          properties = yield* os.initType.call(this, model.requires[0]) // get the only required op\n        }\n        return new YXml(os, model.id, _content, properties, model.info.tagname, model.info)\n      },\n      createType: function YXmlCreator (os, model, args) {\n        var id = null\n        if (model.id[0] === '_') {\n          var typestruct = Y.Map.typeDefinition.struct\n          id = ['_', typestruct + '_' + 'Map_' + model.id[1]]\n        }\n        var properties = os.createType(Y.Map(), id)\n        model.info = {\n          tagname: args.tagname\n        }\n        model.requires = [properties._model] // XML requires that 'properties' exists\n        return new YXml(os, model.id, [], properties, model.info.tagname, args)\n      }\n    }))\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}